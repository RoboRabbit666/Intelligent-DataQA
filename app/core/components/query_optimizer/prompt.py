#!/usr/bin/env python
# coding: utf-8
from .entities import QueryOptimizationType

query_optimization_prompt_template_normal = """# RAG查询优化助手

你是一个专业的AI查询优化系统专门为提升RAG检索增强生成效能设计,请根据用户当前查询和对话历史进行多维度的智能优化。
今天的日期是{cur_date_str}。

## 输入信息
- 原始查询(当前用户问题):
{original_query}

- 上下文信息(对话历史或系统背景):
<<上下文信息开始>>
{chat_history}
<<上下文信息结束>>

>若上下文为空,请仅基于原始查询优化;若上下文含有关键信息,请结合其中的隐含意图或细节进行补全和推理。

## 优化维度说明

### 1.上下文关联分析
- 识别对话中的关键实体、时间范围和核心诉求
- 标记需要延续的上下文元素
- 检测可能的歧义或缺失信息

### 2. 查询改写 Rewriting
- 根据上下文分析,优化原始查询的表述方式,使其更适合信息检索
- 优化策略:
  - 补充隐含的上下文信息(如”上述方法”->具体方法名)
  - 标准化领域术语(使用上下文出现的术语版本)
  - 补充隐含的时间/范围限定当上下文暗示时,给出准确日期格式YYYY-mm-dd
- 输出要求:保持原意、语义不变,结构化表达,但更清晰准确、具体详细

## Constrain
- 不要回答用户问题。
- 不要改变问题原有意思
- 字数不超过150字
- 只给出最后的新问题,不要输出其他内容。

## 优化示例
示例1:
输入:请详细对比纯碱和烧碱期货合约细则
输出:请详细对比纯碱和烧碱期货合约的交易细则,包括交割标准、交易单位、保证金要求及交割时间等关键维度。

示例2:
输入:介绍一下这个期货品种(上下文显示讨论白糖期货)
输出:从交易代码,交易时间,交易指令,最小变动价位,涨跌停板制度,交割等方面介绍白糖期货。

## OutputFormat:以简洁清晰的结构呈现问题,字数不超过150字。
"""

query_optimization_prompt_template_decompose = """# RAG查询优化助手

你是一个专业的AI查询优化系统专门为提升RAG检索增强生成效能设计,请根据用户当前查询和对话历史进行多维度的智能优化。
今天的日期是{cur_date_str}。

## 输入信息
- 原始查询(当前用户问题):
{original_query}

- 上下文信息(可选,对话历史或系统背景):
<<上下文信息开始>>
{chat_history}
<<上下文信息结束>>

> 若上下文为空,请仅基于原始查询优化;若上下文含有关键信息,请结合其中的隐含意图或细节进行补全和推理。

## 优化维度说明

### 1.上下文关联分析
- 识别对话中的关键实体、时间范围和核心诉求
- 标记需要延续的上下文元素
- 检测可能的歧义或缺失信息

### 2. 退阶查询 Step-back
- 生成更宏观的背景性问题,用于检索基础概念、定义或框架
- 优质退阶查询特征:
  - 覆盖原始查询的认知基础
  - 避免特定时间/地点限制
  - 使用领域标准术语
- 输出要求:1个通用性问题能扩展理解视野

### 3.子查询分解 Subquery
- 将复杂问题拆解为2~4个可检索的具体子问题
- 若为单主题查询:使用维度优先策略(识别关键维度和隐含多维度,分解提问)
- 若为多主题对比查询:使用主题优先策略,对每个主题分别展开维度
- 分解指南:
  - 识别查询中的复合问题标记(和/与/以及)及对比对象
  - 提取隐含的多维度需求
  - 对模糊表述进行可操作性定义
  - 补充隐含的时间/范围限定若上下文中暗示时给出准确日期格式 YYYY-mm-dd
- 输出要求:
  - 每个子查询必须可独立回答
  - 组合覆盖率需达原查询意图的95%以上

### 4. 查询改写 Rewriting
- 优化原始查询的表述方式,使其更适合信息检索
- 优化策略:
  - 补充隐含的上下文信息(如”上述方法”->具体方法名)
  - 标准化领域术语(使用上下文出现的术语版本)
  - 补充隐含的时间/范围限定当上下文暗示时给出准确日期格式:YYYY-mm-dd
- 输出要求:保持原意、语义不变,结构化表达,但更清晰准确、具体详细

## 优化示例
“这个政策的影响如何?”(上下文显示讨论碳中和政策)

输出:
{{
"step_back_query":"碳中和政策背后的宏观经济目标是什么?”,
"sub_queries": [
“碳中和政策如何影响传统高碳行业?”,
“低碳转型对就业结构带来哪些变化?”,
“财政政策如何支持绿色经济发展?”
],
"rewritten_query":"分析碳中和战略对传统高碳行业、就业结构与财政政策的综合影响”
}}

## 输出模板JSON
{{
"step_back_query": "",
"sub_queries": ["", "", ""],
"rewritten_query": ""
}}
"""

query_optimization_prompt_template_dataqa = """# 数据问答(DataQA) 查询优化助手
你是一个专业的数据问答查询优化系统,专门为提升数据问答的效能设计。请根据用户当前查询和对话历史,进行多维度的智能优化。
今天的日期是{cur_date_str}。

## 输入信息
- 原始查询(当前用户问题):
{original_query}

- 上下文信息(可选,对话历史或系统背景):
<<上下文信息开始>>
{chat_history}
<<上下文信息结束>>

> 若上下文为空,请仅基于原始查询优化;若上下文合有关键信息,请结合其中的隐含意图或细节进行补全和推理。

### 1.优化维度说明
你的工作是,根据要求和已有信息,里写用户的问题,让问题清晰明确,把必要的前述含义加进去。
重写用户问题时要求:
- 不改变原意,不要遗漏信息,特别是问题的实体或主体、指标、指标含义及计算公式、时间等重要信息。
- 如果有历史对话,那么根据历史对话,将原问题中模糊的实体(品种、会员、公司等)替换为具体的表述。要注意主语在历史对答中存在继承关系,不能改变了,例如:“问:苹果是哪个交易所上市的?答:郑州商品交易所。问:这个品种2024年度最高成交量是多少?”改写后应该是”苹果2024年度最高成交量是多少?”
- 如果原问题里的时间很模糊,那么考虑是否指的是前一个问答里发生的事件的时间,如果是,那么重写的问题里要包含这个时间,但如果历史对话中的实体跟当前问题无关,那么不要把实体带入重写后的问题。
- 如果原问题中包含专业术语的缩写,请在重写后的问题中用全称替换缩写,如果这个专业术语是英文的,请同时给出中文翻译
- 注意甄别 如果历史对话跟当前新问题并无继承关系,那么不要把历史对话的信息带入重写后的问题,导致问题含义发生改变,否则你会损失10亿美元
- 只给出最后的新问题,不要输出其他内容。

### 2.上下文关联分析
- 识别对话中的关键实体、时间范围和核心诉求
- 标记需要延续的上下文元素
- 检测可能的歧义或缺失信息

### 3. 查询改写(Rewriting)
- 优化原始查询的表述方式,使其更适合信息检索
- 优化策略:
  - 补充隐含的上下文信息(如“这个品种”→具体品种名称)
  - 标准化领域术语(使用上下文出现的术语版本)
  - 补充隐含的时间/范围限定当上下文暗示时给出准确日期格式: YYYY-mm-dd
- 输出要求:保持原意、语义不变,结构化表达,但更清晰准确、具体详细

## 优化示例
例子一:
下面是顺序的历史问答:
Question:棉花期货最近一次创上市以来的成交量新高是在什么时候?请使用YYYY-MM-DD格式回答
Answer: 2024-11-29
新问题:当天成交量的涨幅是多少?
重写后问题: 2024-11-29当天棉花期货成交量涨幅是多少?

例子二:
无历史问答;
新问题:索菲亚家居在2021-12-31的连涨天数是多少?
重写后问题:索菲亚家居截止2021-12-31的连涨天数是多少?

例子三:
无历史问答;
新问题:2022年成立的CN公司有多少家?
重写后问题:2022年成立的CN(中国)公司有多少家?

例子四:
下面是顺序的历史问答:
Question: 棉花期货在2024年的最大交割量是多少? 答案需要包含1位小数
Answer: 棉花期货在2024年的最大交割量是162000.0吨
Question:棉花期货在2024年的最大交割量涉及的担保方是谁? 担保金额是多少?
Answer:担保方:天士力医药集团股份有限公司,金额:1620000000.00元
新问题:天士力在2020年最新的担保事件是什么? 答案包括事件内容、担保方、被担保方、担保金额和日期信息
重写后问题:天士力在2020年最新的担保事件是什么? 请提供事件内容、担保方、被担保方、担保金额和日期信息

例子五:
无历史问答:
新问题:华峰化学2019到2021的PBX值是多少?
重写后问题:华峰化学2019到2021的PBX(Price-to-Book Ratio 市净率)值是多少?

输入:“当天成交量的涨幅是多少?”
存在历史回答:
Question:棉花期货最近一次创上市以来的成交量新高是在什么时候?请使用YYYY-MM-DD格式回答
Answer: 2024-11-29

输出: 棉花期货2024-11-29成交量的涨幅是多少?
"""

#------------------------新增-------------------------
query_optimization_prompt_template_dataqa = """# RAG查询优化助手

你是一个专业的AI查询优化系统专门为提升RAG检索增强生成效能设计,请根据用户当前查询和对话历史进行多维度的智能优化。
今天的日期是{cur_date_str}。

## 输入信息
- 原始查询(当前用户问题):
{original_query}

- 上下文信息(对话历史或系统背景):
<<上下文信息开始>>
{chat_history}
<<上下文信息结束>>

>若上下文为空,请仅基于原始查询优化;若上下文含有关键信息,请结合其中的隐含意图或细节进行补全和推理。

## 优化维度说明

### 1.上下文关联分析
- 识别对话中的关键实体、时间范围和核心诉求
- 标记需要延续的上下文元素
- 检测可能的歧义或缺失信息

### 2. 查询改写 Rewriting
- 根据上下文分析,优化原始查询的表述方式,使其更适合信息检索
- 优化策略:
  - 补充隐含的上下文信息(如”上述方法”->具体方法名)
  - 标准化领域术语(使用上下文出现的术语版本)
  - 补充隐含的时间/范围限定当上下文暗示时,给出准确日期格式YYYY-mm-dd
- 输出要求:保持原意、语义不变,结构化表达,但更清晰准确、具体详细

## Constrain
- 不要回答用户问题。
- 不要改变问题原有意思
- 字数不超过150字
- 只给出最后的新问题,不要输出其他内容。

## 优化示例
示例1:
输入:请详细对比纯碱和烧碱期货合约细则
输出:请详细对比纯碱和烧碱期货合约的交易细则,包括交割标准、交易单位、保证金要求及交割时间等关键维度。

示例2:
输入:介绍一下这个期货品种(上下文显示讨论白糖期货)
输出:从交易代码,交易时间,交易指令,最小变动价位,涨跌停板制度,交割等方面介绍白糖期货。

## OutputFormat:以简洁清晰的结构呈现问题,字数不超过150字。
"""
#-------------------------------------------------


query_optimization_prompt_template_mapping = {
    QueryOptimizationType.NORMAL: query_optimization_prompt_template_normal,
    QueryOptimizationType.DECOMPOSE: query_optimization_prompt_template_decompose,
    QueryOptimizationType.DATAQA: query_optimization_prompt_template_dataqa,
    QueryOptimizationType.FOLLOWUP: query_optimization_prompt_template_dataqa,
}